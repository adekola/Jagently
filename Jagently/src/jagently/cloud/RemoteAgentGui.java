/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package jagently.cloud;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;

/**
 *
 * @author ameerah
 */
public class RemoteAgentGui extends javax.swing.JFrame {

    /**
     * Creates new form RemoteAgentGui
     */
    String buildCommand;

    public RemoteAgentGui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        hostPort = new javax.swing.JTextField();
        hostIP = new javax.swing.JTextField();
        containerName = new javax.swing.JTextField();
        platformName = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        agentName = new javax.swing.JTextField();

        hostPort.setText("jTextField1");

        hostIP.setText("jTextField1");
        hostIP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hostIPActionPerformed(evt);
            }
        });

        containerName.setText("jTextField1");

        platformName.setText("jTextField1");

        jButton1.setText("Create Agent");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Host Ip");

        jLabel2.setText("Host Port");

        jLabel3.setText("ContainerName");

        jLabel4.setText("PlatformName");

        jLabel5.setText("AgentName");

        agentName.setText("jTextField1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(hostIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(containerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel3))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(hostPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(agentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(platformName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)))
                .addContainerGap(150, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hostIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hostPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(containerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(platformName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(agentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(31, 31, 31))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void hostIPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hostIPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hostIPActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        StringBuffer result = new StringBuffer();

        // System.out.println("Before socket connection");
        String ipOfHost = hostIP.getText();
        String port = hostPort.getText();
        String nameOfAgent = agentName.getText();
        String nameOfContainer = containerName.getText();
        String nameOfPlatform = platformName.getText();
        RemoteAgentGui remoteAgent = new RemoteAgentGui();
   //      java jade.Boot -container -container-name newContainer -host 52.30.6.110 -port 1099 R:jagently.cloud.RemoteAgent

        //building the command in command line;
        buildCommand = "java" + " " + "jade.Boot" + " " + "-container" + " " + "-container-name" + " " + nameOfContainer + " " + "-host" + " " + ipOfHost + " " + "-port" + " " + port + " " + nameOfAgent + ":" + "jagently.cloud.SupervisorAgent";
        RemoteAgent remoteAgentCall = new RemoteAgent();
        remoteAgentCall.executeCommand(buildCommand);
         //   System.out.println("After socket connection");
        //PrintWriter out = new PrintWriter(socket.getOutputStream(), true);
        // BufferedReader in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
        // System.out.println("After Buffered readers");
        //System.out.println("After getting streams");

// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
       
         //</editor-fold>

         /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RemoteAgentGui().setVisible(true);
            }
        });
    }

    /*public void executeCommand(String buildCommand) {

     StringBuffer output = new StringBuffer();

     Process p;
     try {
     p = java.lang.Runtime.getRuntime().exec(buildCommand);
     p.waitFor();
     BufferedReader reader = 
     new BufferedReader(new InputStreamReader(p.getInputStream()));

     String line = "";			
     while ((line = reader.readLine())!= null) {
     output.append(line + "\n");
     }

     } catch (Exception e) {
     e.printStackTrace();
     }}*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField agentName;
    private javax.swing.JTextField containerName;
    private javax.swing.JTextField hostIP;
    private javax.swing.JTextField hostPort;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField platformName;
    // End of variables declaration//GEN-END:variables

 

               //Profile pClient = new ProfileImpl(false);
    //pClient.setParameter(Profile.MAIN_HOST, "172.26.190.91");
    //pClient.setParameter(Profile.MAIN_PORT, "1099");
            /*try {

     Runtime rtClient = Runtime.instance();
                
                
     Profile pClient = new ProfileImpl(false);//("52.30.231.116", 1099, null, false);
                
                
     pClient.setParameter(ProfileImpl.PLATFORM_ID, "platform"+1); 
     // ID range from 1 to 10 
     pClient.setParameter(Profile.MAIN_HOST, "52.30.231.116");
     pClient.setParameter(Profile.MAIN_PORT, "1099"); // available port 
     pClient.setParameter(Profile.LOCAL_HOST, "jicp://172.30.0.79");
     pClient.setParameter(Profile.LOCAL_PORT, "1099");
     rtClient.instance().setCloseVM(false);
                
                
     //ContainerController mc = Runtime.instance().createMainContainer(pClient);

     pClient.setParameter(Profile.CONTAINER_NAME, "newContainer");

     AgentContainer ccAg = (AgentContainer) rtClient.createAgentContainer(pClient);

     AgentController t2 = ccAg.createNewAgent(String.format("%s:%s", "SupervisorAgent", agentCount++), SupervisorAgent.class.getName(), null);

     t2.start();

     //controller=ccAg.createNewAgent("PawnAgent",PawnAgent.class.getName(),Object[] args);
     //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
     } catch (StaleProxyException ex) {
     Logger.getLogger(RemoteAgent.class.getName()).log(Level.SEVERE, null, ex);
     }
     }
     */
}
